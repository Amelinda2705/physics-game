---
import "../styles/global.css";
import Layout from "../layouts/Layout.astro";
import { db, Questions, eq } from "astro:db";

if (Astro.request.method === "POST") {
    const formData = await Astro.request.formData();
    const action = formData.get("action");

    try {
        if (action === "create") {
            const question = formData.get("question");
            const answer = formData.get("answer");

            if (typeof question === "string" && answer) {
                await db.insert(Questions).values({
                    question,
                    answer: Number(answer),
                });
                return Astro.redirect("/admin?success=created");
            }
        } else if (action === "update") {
            const id = formData.get("id");
            const question = formData.get("question");
            const answer = formData.get("answer");

            if (id && typeof question === "string" && answer) {
                await db
                    .update(Questions)
                    .set({ question, answer: Number(answer) })
                    .where(eq(Questions.id, Number(id)));
                return Astro.redirect("/admin?success=updated");
            }
        } else if (action === "delete") {
            const id = formData.get("id");

            if (id) {
                await db.delete(Questions).where(eq(Questions.id, Number(id)));
                return Astro.redirect("/admin?success=deleted");
            }
        }
    } catch (error) {
        console.error("Error:", error);
        return Astro.redirect("/admin?error=true");
    }
}

const url = new URL(Astro.request.url);
const successParam = url.searchParams.get("success");
const errorParam = url.searchParams.get("error");

let successMessage = "";
let errorMessage = "";

if (successParam === "created")
    successMessage = "Question created successfully!";
if (successParam === "updated")
    successMessage = "Question updated successfully!";
if (successParam === "deleted")
    successMessage = "Question deleted successfully!";
if (errorParam) errorMessage = "An error occurred. Please try again.";

const questions = await db.select().from(Questions);
---

<Layout>
    <main>
        <div
            id="popupContainer"
            class="popup-hidden fixed top-0 left-0 w-full h-full bg-gray-600/60 flex justify-center items-center z-50"
        >
            <div
                class="popup-content bg-white p-8 rounded-lg shadow-md relative max-w-md w-full mx-4"
            >
                <span
                    class="close-button absolute top-2 right-3 text-2xl cursor-pointer hover:text-red-600"
                    id="close">&times;</span
                >
                <h2 class="text-xl font-bold mb-4" id="popupTitle">
                    Add New Question
                </h2>
                <form id="questionForm" method="POST">
                    <input
                        type="hidden"
                        name="action"
                        id="formAction"
                        value="create"
                    />
                    <input type="hidden" name="id" id="editId" value="" />

                    <label for="question">Question: </label>
                    <input type="text" id="question" name="question" required />

                    <label for="answer">Answer: </label>
                    <input type="number" id="answer" name="answer" required />

                    <button type="submit">Submit</button>
                </form>
            </div>
        </div>

        <div class="p-6">
            {
                successMessage && (
                    <div class="alert alert-success">{successMessage}</div>
                )
            }
            {
                errorMessage && (
                    <div class="alert alert-error">{errorMessage}</div>
                )
            }

            <button
                id="addQuestion"
                class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-4"
            >
                Add New Question
            </button>

            <div class="mt-6" id="admin-page">
                {
                    questions.map(({ id, question, answer }) => (
                        <div class="border-2 border-gray-700 mb-5 p-5 rounded-lg">
                            <p class="text-2xl font-black">{id}.</p>
                            <p class="mb-2">
                                <span class="text-gray-500 font-semibold">
                                    Question:
                                </span>
                                {question}
                            </p>
                            <p class="mb-4">
                                <span class="text-gray-500 font-semibold">
                                    Answer:
                                </span>
                                {answer}
                            </p>
                            <div>
                                <button
                                    class="action-btn edit-btn"
                                    data-id={id}
                                    data-question={question}
                                    data-answer={answer}
                                    onclick="editQuestion(this)"
                                >
                                    Edit
                                </button>
                                <form method="POST" style="display: inline;">
                                    <input
                                        type="hidden"
                                        name="action"
                                        value="delete"
                                    />
                                    <input type="hidden" name="id" value={id} />
                                    <button
                                        type="submit"
                                        class="action-btn delete-btn"
                                        onclick="return confirm('Are you sure you want to delete this question?')"
                                    >
                                        Delete
                                    </button>
                                </form>
                            </div>
                        </div>
                    ))
                }
            </div>
        </div>
    </main>
</Layout>

<script type="module">
    // Open popup for adding new question
    document.getElementById("addQuestion").onclick = function () {
        document.getElementById("popupTitle").textContent = "Add New Question";
        document.getElementById("questionForm").reset();
        document.getElementById("formAction").value = "create";
        document.getElementById("editId").value = "";
        document
            .getElementById("popupContainer")
            .classList.remove("popup-hidden");
    };

    // Close popup
    document.getElementById("close").onclick = function () {
        document.getElementById("popupContainer").classList.add("popup-hidden");
    };

    // Close popup when clicking outside
    document.getElementById("popupContainer").onclick = function (e) {
        if (e.target.id === "popupContainer") {
            document
                .getElementById("popupContainer")
                .classList.add("popup-hidden");
        }
    };

    // Edit question
    window.editQuestion = function (button) {
        const id = button.dataset.id;
        const question = button.dataset.question;
        const answer = button.dataset.answer;

        document.getElementById("popupTitle").textContent = "Edit Question";
        document.getElementById("formAction").value = "update";
        document.getElementById("editId").value = id;
        document.getElementById("question").value = question;
        document.getElementById("answer").value = answer;
        document
            .getElementById("popupContainer")
            .classList.remove("popup-hidden");
    };
</script>
