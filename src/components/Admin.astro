---
import { db, Questions } from "astro:db";

const questions = await db.select().from(Questions);
---

<main>
    <div
        id="popupContainer"
        class="popup-hidden fixed top-0 left-0 w-full h-full bg-gray-600/60 flex justify-center items-center z-50"
    >
        <div
            class="popup-content bg-white p-20 rounded-lg shadow-md relative w-4xl max-w-4/5"
        >
            <span
                class="close-button absolute top-2 right-3 text-2xl cursor-pointer"
                id="close">&times;</span
            >
            <p id="popupTitle">Add New Question</p>
            <form method="POST" id="questionForm">
                <input
                    type="hidden"
                    name="action"
                    id="formAction"
                    value="create"
                />
                <input type="hidden" name="id" id="editId" value="" />
                <label for="question">Question: </label><input
                    type="text"
                    id="question"
                    name="question"
                    required
                />
                <label for="answer">Answer: </label><input
                    type="number"
                    id="answer"
                    name="answer"
                    required
                />
                <button type="submit">Submit</button>
            </form>
        </div>
    </div>
    <button id="addQuestion">Add New Question</button>
    <div class="m-20" id="admin-page">
        {
            questions.map(({ id, question, answer }) => (
                <div class="border-2 border-gray-700 mb-5 p-5 rounded-lg">
                    <p class="text-2xl font-black">{id}.</p>
                    <p>
                        <span class="text-gray-500 font-semibold">
                            Question:
                        </span>
                        {question}
                    </p>
                    <p>
                        <span class="text-gray-500 font-semibold">Answer:</span>
                        {answer}
                    </p>
                    <div class="">
                        <button>Edit</button>
                        <button>Delete</button>
                    </div>
                </div>
            ))
        }
    </div>
</main>

<script type="module">
    document.getElementById("addQuestion").onclick = function () {
        document.getElementById("popupTitle").textContent = "Add New Question";
        document.getElementById("questionForm").reset();
        document.getElementById("formAction").value = "create";
        document.getElementById("editId").value = "";
        document
            .getElementById("popupContainer")
            .classList.remove("popup-hidden");
    };

    document.getElementById("close").onclick = function closePopup() {
        document.getElementById("popupContainer").classList.add("popup-hidden");
    };

    // close popup when clicking outside
    document.getElementById("popupContainer").onclick = function (e) {
        if (e.target.id === "popupContainer") {
            document
                .getElementById("popupContainer")
                .classList.add("popup-hidden");
        }
    };

    document
        .getElementById("questionForm")
        .addEventListener("submit", async (e) => {
            e.preventDefault();

            const action = document.getElementById("formAction").value;
            const question = document.getElementById("question").value.trim();
            const answer = document.getElementById("answer").value.trim();
            const id = document.getElementById("editId").value;

            if (!question || !answer) return;

            const formData = new FormData();
            formData.append("question", question);
            formData.append("answer", answer);

            let url = "/api/questions";
            let method = "POST";

            if (action === "update" && id) {
                url = `/api/questions/${id}`;
                method = "PUT";
            }

            try {
                const response = await fetch(url, {
                    method: method,
                    body: formData,
                });

                if (response.ok) {
                    window.location.reload();
                } else {
                    alert("Error saving question");
                }
            } catch (error) {
                console.error("Error:", error);
                alert("Error saving question");
            }
        });

    window.editQuestion = function (button) {
        const id = button.dataset.id;
        const question = button.dataset.question;
        const answer = button.dataset.answer;

        document.getElementById("popupTitle").textContent = "Edit Question";
        document.getElementById("formAction").value = "update";
        document.getElementById("editId").value = id;
        document.getElementById("question").value = question;
        document.getElementById("answer").value = answer;
        document
            .getElementById("popupContainer")
            .classList.remove("popup-hidden");
    };

    window.deleteQuestion = function (button) {
        if (confirm("yg bener mw di apuss??")) {
            const id = button.dataset.id;

            const form = document.createElement("form");
            form.method = "POST";
            form.style.display = "none";

            const actionInput = document.createElement("input");
            actionInput.type = "hidden";
            actionInput.name = "action";
            actionInput.value = "delete";

            const idInput = document.createElement("input");
            idInput.type = "hidden";
            idInput.name = "id";
            idInput.value = "id";

            form.appendChild(actionInput);
            form.appendChild(idInput);
            document.body.appendChild(form);
            form.submit();
        }
    };
</script>
